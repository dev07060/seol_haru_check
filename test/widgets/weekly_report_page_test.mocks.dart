// Mocks generated by Mockito 5.4.6 from annotations
// in seol_haru_check/test/widgets/weekly_report_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;

import 'package:cloud_firestore/cloud_firestore.dart' as _i13;
import 'package:firebase_auth/firebase_auth.dart' as _i3;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i2;
import 'package:flutter/widgets.dart' as _i5;
import 'package:go_router/src/configuration.dart' as _i4;
import 'package:go_router/src/delegate.dart' as _i6;
import 'package:go_router/src/information_provider.dart' as _i7;
import 'package:go_router/src/match.dart' as _i16;
import 'package:go_router/src/parser.dart' as _i8;
import 'package:go_router/src/router.dart' as _i15;
import 'package:go_router/src/state.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;
import 'package:seol_haru_check/models/weekly_report_model.dart' as _i12;
import 'package:seol_haru_check/services/weekly_report_service.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserMetadata_0 extends _i1.SmartFake implements _i2.UserMetadata {
  _FakeUserMetadata_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMultiFactor_1 extends _i1.SmartFake implements _i3.MultiFactor {
  _FakeMultiFactor_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIdTokenResult_2 extends _i1.SmartFake implements _i2.IdTokenResult {
  _FakeIdTokenResult_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserCredential_3 extends _i1.SmartFake
    implements _i3.UserCredential {
  _FakeUserCredential_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConfirmationResult_4 extends _i1.SmartFake
    implements _i3.ConfirmationResult {
  _FakeConfirmationResult_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_5 extends _i1.SmartFake implements _i3.User {
  _FakeUser_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRouteConfiguration_6 extends _i1.SmartFake
    implements _i4.RouteConfiguration {
  _FakeRouteConfiguration_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBackButtonDispatcher_7 extends _i1.SmartFake
    implements _i5.BackButtonDispatcher {
  _FakeBackButtonDispatcher_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoRouterDelegate_8 extends _i1.SmartFake
    implements _i6.GoRouterDelegate {
  _FakeGoRouterDelegate_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoRouteInformationProvider_9 extends _i1.SmartFake
    implements _i7.GoRouteInformationProvider {
  _FakeGoRouteInformationProvider_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoRouteInformationParser_10 extends _i1.SmartFake
    implements _i8.GoRouteInformationParser {
  _FakeGoRouteInformationParser_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoRouterState_11 extends _i1.SmartFake implements _i9.GoRouterState {
  _FakeGoRouterState_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [WeeklyReportService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeeklyReportService extends _i1.Mock
    implements _i10.WeeklyReportService {
  MockWeeklyReportService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<List<_i12.WeeklyReport>> fetchUserReports({
    required String? userUuid,
    int? limit = 10,
    _i13.DocumentSnapshot<Object?>? startAfter,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#fetchUserReports, [], {
              #userUuid: userUuid,
              #limit: limit,
              #startAfter: startAfter,
            }),
            returnValue: _i11.Future<List<_i12.WeeklyReport>>.value(
              <_i12.WeeklyReport>[],
            ),
          )
          as _i11.Future<List<_i12.WeeklyReport>>);

  @override
  _i11.Future<_i12.WeeklyReport?> fetchCurrentWeekReport(String? userUuid) =>
      (super.noSuchMethod(
            Invocation.method(#fetchCurrentWeekReport, [userUuid]),
            returnValue: _i11.Future<_i12.WeeklyReport?>.value(),
          )
          as _i11.Future<_i12.WeeklyReport?>);

  @override
  _i11.Future<_i12.WeeklyReport?> fetchReportByWeek({
    required String? userUuid,
    required DateTime? weekStart,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#fetchReportByWeek, [], {
              #userUuid: userUuid,
              #weekStart: weekStart,
            }),
            returnValue: _i11.Future<_i12.WeeklyReport?>.value(),
          )
          as _i11.Future<_i12.WeeklyReport?>);

  @override
  _i11.Stream<_i12.WeeklyReport?> getCurrentWeekReportStream(
    String? userUuid,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentWeekReportStream, [userUuid]),
            returnValue: _i11.Stream<_i12.WeeklyReport?>.empty(),
          )
          as _i11.Stream<_i12.WeeklyReport?>);

  @override
  _i11.Stream<bool> getNewReportNotificationStream(String? userUuid) =>
      (super.noSuchMethod(
            Invocation.method(#getNewReportNotificationStream, [userUuid]),
            returnValue: _i11.Stream<bool>.empty(),
          )
          as _i11.Stream<bool>);

  @override
  _i11.Future<bool> hasAnyReports(String? userUuid) =>
      (super.noSuchMethod(
            Invocation.method(#hasAnyReports, [userUuid]),
            returnValue: _i11.Future<bool>.value(false),
          )
          as _i11.Future<bool>);

  @override
  _i11.Future<int> getReportsCount(String? userUuid) =>
      (super.noSuchMethod(
            Invocation.method(#getReportsCount, [userUuid]),
            returnValue: _i11.Future<int>.value(0),
          )
          as _i11.Future<int>);

  @override
  _i11.Future<List<DateTime>> getAvailableWeeks(String? userUuid) =>
      (super.noSuchMethod(
            Invocation.method(#getAvailableWeeks, [userUuid]),
            returnValue: _i11.Future<List<DateTime>>.value(<DateTime>[]),
          )
          as _i11.Future<List<DateTime>>);

  @override
  _i11.Future<DateTime?> getEarliestReportDate(String? userUuid) =>
      (super.noSuchMethod(
            Invocation.method(#getEarliestReportDate, [userUuid]),
            returnValue: _i11.Future<DateTime?>.value(),
          )
          as _i11.Future<DateTime?>);

  @override
  void clearCache() => super.noSuchMethod(
    Invocation.method(#clearCache, []),
    returnValueForMissingStub: null,
  );

  @override
  void clearExpiredCache() => super.noSuchMethod(
    Invocation.method(#clearExpiredCache, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i3.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified =>
      (super.noSuchMethod(Invocation.getter(#emailVerified), returnValue: false)
          as bool);

  @override
  bool get isAnonymous =>
      (super.noSuchMethod(Invocation.getter(#isAnonymous), returnValue: false)
          as bool);

  @override
  _i2.UserMetadata get metadata =>
      (super.noSuchMethod(
            Invocation.getter(#metadata),
            returnValue: _FakeUserMetadata_0(
              this,
              Invocation.getter(#metadata),
            ),
          )
          as _i2.UserMetadata);

  @override
  List<_i2.UserInfo> get providerData =>
      (super.noSuchMethod(
            Invocation.getter(#providerData),
            returnValue: <_i2.UserInfo>[],
          )
          as List<_i2.UserInfo>);

  @override
  String get uid =>
      (super.noSuchMethod(
            Invocation.getter(#uid),
            returnValue: _i14.dummyValue<String>(this, Invocation.getter(#uid)),
          )
          as String);

  @override
  _i3.MultiFactor get multiFactor =>
      (super.noSuchMethod(
            Invocation.getter(#multiFactor),
            returnValue: _FakeMultiFactor_1(
              this,
              Invocation.getter(#multiFactor),
            ),
          )
          as _i3.MultiFactor);

  @override
  _i11.Future<void> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  _i11.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdToken, [forceRefresh]),
            returnValue: _i11.Future<String?>.value(),
          )
          as _i11.Future<String?>);

  @override
  _i11.Future<_i2.IdTokenResult> getIdTokenResult([
    bool? forceRefresh = false,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdTokenResult, [forceRefresh]),
            returnValue: _i11.Future<_i2.IdTokenResult>.value(
              _FakeIdTokenResult_2(
                this,
                Invocation.method(#getIdTokenResult, [forceRefresh]),
              ),
            ),
          )
          as _i11.Future<_i2.IdTokenResult>);

  @override
  _i11.Future<_i3.UserCredential> linkWithCredential(
    _i2.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithCredential, [credential]),
            returnValue: _i11.Future<_i3.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#linkWithCredential, [credential]),
              ),
            ),
          )
          as _i11.Future<_i3.UserCredential>);

  @override
  _i11.Future<_i3.UserCredential> linkWithProvider(
    _i2.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithProvider, [provider]),
            returnValue: _i11.Future<_i3.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#linkWithProvider, [provider]),
              ),
            ),
          )
          as _i11.Future<_i3.UserCredential>);

  @override
  _i11.Future<_i3.UserCredential> reauthenticateWithProvider(
    _i2.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithProvider, [provider]),
            returnValue: _i11.Future<_i3.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#reauthenticateWithProvider, [provider]),
              ),
            ),
          )
          as _i11.Future<_i3.UserCredential>);

  @override
  _i11.Future<_i3.UserCredential> reauthenticateWithPopup(
    _i2.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithPopup, [provider]),
            returnValue: _i11.Future<_i3.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#reauthenticateWithPopup, [provider]),
              ),
            ),
          )
          as _i11.Future<_i3.UserCredential>);

  @override
  _i11.Future<void> reauthenticateWithRedirect(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithRedirect, [provider]),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  _i11.Future<_i3.UserCredential> linkWithPopup(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPopup, [provider]),
            returnValue: _i11.Future<_i3.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#linkWithPopup, [provider]),
              ),
            ),
          )
          as _i11.Future<_i3.UserCredential>);

  @override
  _i11.Future<void> linkWithRedirect(_i2.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithRedirect, [provider]),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  _i11.Future<_i3.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i3.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i11.Future<_i3.ConfirmationResult>.value(
              _FakeConfirmationResult_4(
                this,
                Invocation.method(#linkWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i11.Future<_i3.ConfirmationResult>);

  @override
  _i11.Future<_i3.UserCredential> reauthenticateWithCredential(
    _i2.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithCredential, [credential]),
            returnValue: _i11.Future<_i3.UserCredential>.value(
              _FakeUserCredential_3(
                this,
                Invocation.method(#reauthenticateWithCredential, [credential]),
              ),
            ),
          )
          as _i11.Future<_i3.UserCredential>);

  @override
  _i11.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  _i11.Future<void> sendEmailVerification([
    _i2.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, [actionCodeSettings]),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  _i11.Future<_i3.User> unlink(String? providerId) =>
      (super.noSuchMethod(
            Invocation.method(#unlink, [providerId]),
            returnValue: _i11.Future<_i3.User>.value(
              _FakeUser_5(this, Invocation.method(#unlink, [providerId])),
            ),
          )
          as _i11.Future<_i3.User>);

  @override
  _i11.Future<void> updateEmail(String? newEmail) =>
      (super.noSuchMethod(
            Invocation.method(#updateEmail, [newEmail]),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  _i11.Future<void> updatePassword(String? newPassword) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [newPassword]),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  _i11.Future<void> updatePhoneNumber(
    _i2.PhoneAuthCredential? phoneCredential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneNumber, [phoneCredential]),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  _i11.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
            Invocation.method(#updateDisplayName, [displayName]),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  _i11.Future<void> updatePhotoURL(String? photoURL) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhotoURL, [photoURL]),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  _i11.Future<void> updateProfile({String? displayName, String? photoURL}) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #displayName: displayName,
              #photoURL: photoURL,
            }),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);

  @override
  _i11.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i2.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#verifyBeforeUpdateEmail, [
              newEmail,
              actionCodeSettings,
            ]),
            returnValue: _i11.Future<void>.value(),
            returnValueForMissingStub: _i11.Future<void>.value(),
          )
          as _i11.Future<void>);
}

/// A class which mocks [GoRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoRouter extends _i1.Mock implements _i15.GoRouter {
  MockGoRouter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.RouteConfiguration get configuration =>
      (super.noSuchMethod(
            Invocation.getter(#configuration),
            returnValue: _FakeRouteConfiguration_6(
              this,
              Invocation.getter(#configuration),
            ),
          )
          as _i4.RouteConfiguration);

  @override
  _i5.BackButtonDispatcher get backButtonDispatcher =>
      (super.noSuchMethod(
            Invocation.getter(#backButtonDispatcher),
            returnValue: _FakeBackButtonDispatcher_7(
              this,
              Invocation.getter(#backButtonDispatcher),
            ),
          )
          as _i5.BackButtonDispatcher);

  @override
  _i6.GoRouterDelegate get routerDelegate =>
      (super.noSuchMethod(
            Invocation.getter(#routerDelegate),
            returnValue: _FakeGoRouterDelegate_8(
              this,
              Invocation.getter(#routerDelegate),
            ),
          )
          as _i6.GoRouterDelegate);

  @override
  _i7.GoRouteInformationProvider get routeInformationProvider =>
      (super.noSuchMethod(
            Invocation.getter(#routeInformationProvider),
            returnValue: _FakeGoRouteInformationProvider_9(
              this,
              Invocation.getter(#routeInformationProvider),
            ),
          )
          as _i7.GoRouteInformationProvider);

  @override
  _i8.GoRouteInformationParser get routeInformationParser =>
      (super.noSuchMethod(
            Invocation.getter(#routeInformationParser),
            returnValue: _FakeGoRouteInformationParser_10(
              this,
              Invocation.getter(#routeInformationParser),
            ),
          )
          as _i8.GoRouteInformationParser);

  @override
  bool get overridePlatformDefaultLocation =>
      (super.noSuchMethod(
            Invocation.getter(#overridePlatformDefaultLocation),
            returnValue: false,
          )
          as bool);

  @override
  _i9.GoRouterState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakeGoRouterState_11(this, Invocation.getter(#state)),
          )
          as _i9.GoRouterState);

  @override
  set configuration(_i4.RouteConfiguration? _configuration) =>
      super.noSuchMethod(
        Invocation.setter(#configuration, _configuration),
        returnValueForMissingStub: null,
      );

  @override
  set routerDelegate(_i6.GoRouterDelegate? _routerDelegate) =>
      super.noSuchMethod(
        Invocation.setter(#routerDelegate, _routerDelegate),
        returnValueForMissingStub: null,
      );

  @override
  set routeInformationProvider(
    _i7.GoRouteInformationProvider? _routeInformationProvider,
  ) => super.noSuchMethod(
    Invocation.setter(#routeInformationProvider, _routeInformationProvider),
    returnValueForMissingStub: null,
  );

  @override
  set routeInformationParser(
    _i8.GoRouteInformationParser? _routeInformationParser,
  ) => super.noSuchMethod(
    Invocation.setter(#routeInformationParser, _routeInformationParser),
    returnValueForMissingStub: null,
  );

  @override
  bool canPop() =>
      (super.noSuchMethod(Invocation.method(#canPop, []), returnValue: false)
          as bool);

  @override
  String namedLocation(
    String? name, {
    Map<String, String>? pathParameters = const {},
    Map<String, dynamic>? queryParameters = const {},
    String? fragment,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #namedLocation,
              [name],
              {
                #pathParameters: pathParameters,
                #queryParameters: queryParameters,
                #fragment: fragment,
              },
            ),
            returnValue: _i14.dummyValue<String>(
              this,
              Invocation.method(
                #namedLocation,
                [name],
                {
                  #pathParameters: pathParameters,
                  #queryParameters: queryParameters,
                  #fragment: fragment,
                },
              ),
            ),
          )
          as String);

  @override
  void go(String? location, {Object? extra}) => super.noSuchMethod(
    Invocation.method(#go, [location], {#extra: extra}),
    returnValueForMissingStub: null,
  );

  @override
  void restore(_i16.RouteMatchList? matchList) => super.noSuchMethod(
    Invocation.method(#restore, [matchList]),
    returnValueForMissingStub: null,
  );

  @override
  void goNamed(
    String? name, {
    Map<String, String>? pathParameters = const {},
    Map<String, dynamic>? queryParameters = const {},
    Object? extra,
    String? fragment,
  }) => super.noSuchMethod(
    Invocation.method(
      #goNamed,
      [name],
      {
        #pathParameters: pathParameters,
        #queryParameters: queryParameters,
        #extra: extra,
        #fragment: fragment,
      },
    ),
    returnValueForMissingStub: null,
  );

  @override
  _i11.Future<T?> push<T extends Object?>(String? location, {Object? extra}) =>
      (super.noSuchMethod(
            Invocation.method(#push, [location], {#extra: extra}),
            returnValue: _i11.Future<T?>.value(),
          )
          as _i11.Future<T?>);

  @override
  _i11.Future<T?> pushNamed<T extends Object?>(
    String? name, {
    Map<String, String>? pathParameters = const {},
    Map<String, dynamic>? queryParameters = const {},
    Object? extra,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #pushNamed,
              [name],
              {
                #pathParameters: pathParameters,
                #queryParameters: queryParameters,
                #extra: extra,
              },
            ),
            returnValue: _i11.Future<T?>.value(),
          )
          as _i11.Future<T?>);

  @override
  _i11.Future<T?> pushReplacement<T extends Object?>(
    String? location, {
    Object? extra,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#pushReplacement, [location], {#extra: extra}),
            returnValue: _i11.Future<T?>.value(),
          )
          as _i11.Future<T?>);

  @override
  _i11.Future<T?> pushReplacementNamed<T extends Object?>(
    String? name, {
    Map<String, String>? pathParameters = const {},
    Map<String, dynamic>? queryParameters = const {},
    Object? extra,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #pushReplacementNamed,
              [name],
              {
                #pathParameters: pathParameters,
                #queryParameters: queryParameters,
                #extra: extra,
              },
            ),
            returnValue: _i11.Future<T?>.value(),
          )
          as _i11.Future<T?>);

  @override
  _i11.Future<T?> replace<T>(String? location, {Object? extra}) =>
      (super.noSuchMethod(
            Invocation.method(#replace, [location], {#extra: extra}),
            returnValue: _i11.Future<T?>.value(),
          )
          as _i11.Future<T?>);

  @override
  _i11.Future<T?> replaceNamed<T>(
    String? name, {
    Map<String, String>? pathParameters = const {},
    Map<String, dynamic>? queryParameters = const {},
    Object? extra,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #replaceNamed,
              [name],
              {
                #pathParameters: pathParameters,
                #queryParameters: queryParameters,
                #extra: extra,
              },
            ),
            returnValue: _i11.Future<T?>.value(),
          )
          as _i11.Future<T?>);

  @override
  void pop<T extends Object?>([T? result]) => super.noSuchMethod(
    Invocation.method(#pop, [result]),
    returnValueForMissingStub: null,
  );

  @override
  void refresh() => super.noSuchMethod(
    Invocation.method(#refresh, []),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}
